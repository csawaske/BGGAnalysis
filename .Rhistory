BGG_tbl$stats.numcomments = as.numeric(as.character(BGG_tbl$stats.numcomments))
BGG_tbl$stats.usersrated = as.numeric(as.character(BGG_tbl$stats.usersrated))
BGG_tbl$stats.avgweight = as.numeric(as.character(BGG_tbl$stats.avgweight))
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
View(year_weight)
boxplot(year_weight$weight~year_weight$year)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:12)))
BGG_tbl = as.data.frame(BGG_flat)
BGG_tbl$id = as.numeric(as.character(BGG_tbl$id))
BGG_tbl$year = as.numeric(as.character(BGG_tbl$year))
BGG_tbl$mintime = as.numeric(as.character(BGG_tbl$mintime))
BGG_tbl$maxtime = as.numeric(as.character(BGG_tbl$maxtime))
BGG_tbl$age = as.numeric(as.character(BGG_tbl$age))
BGG_tbl$mintplayers = as.numeric(as.character(BGG_tbl$minplayers))
BGG_tbl$maxplayers = as.numeric(as.character(BGG_tbl$maxplayers))
BGG_tbl$usrage = as.numeric(as.character(BGG_tbl$usrage))
BGG_tbl$stats.average = as.numeric(as.character(BGG_tbl$stats.average))
BGG_tbl$stats.numowned = as.numeric(as.character(BGG_tbl$stats.numowned))
BGG_tbl$stats.numcomments = as.numeric(as.character(BGG_tbl$stats.numcomments))
BGG_tbl$stats.usersrated = as.numeric(as.character(BGG_tbl$stats.usersrated))
BGG_tbl$stats.avgweight = as.numeric(as.character(BGG_tbl$stats.avgweight))
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:12)))
boxplot(year_weight$weight~year_weight$year)
options(scipen=999)
BGG_tbl = as.data.frame(BGG_flat)
BGG_tbl$id = as.numeric(as.character(BGG_tbl$id))
BGG_tbl$year = as.numeric(as.character(BGG_tbl$year))
BGG_tbl$mintime = as.numeric(as.character(BGG_tbl$mintime))
BGG_tbl$maxtime = as.numeric(as.character(BGG_tbl$maxtime))
BGG_tbl$age = as.numeric(as.character(BGG_tbl$age))
BGG_tbl$mintplayers = as.numeric(as.character(BGG_tbl$minplayers))
BGG_tbl$maxplayers = as.numeric(as.character(BGG_tbl$maxplayers))
BGG_tbl$usrage = as.numeric(as.character(BGG_tbl$usrage))
BGG_tbl$stats.average = as.numeric(as.character(BGG_tbl$stats.average))
BGG_tbl$stats.numowned = as.numeric(as.character(BGG_tbl$stats.numowned))
BGG_tbl$stats.numcomments = as.numeric(as.character(BGG_tbl$stats.numcomments))
BGG_tbl$stats.usersrated = as.numeric(as.character(BGG_tbl$stats.usersrated))
BGG_tbl$stats.avgweight = as.numeric(as.character(BGG_tbl$stats.avgweight))
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:12)))
boxplot(year_weight$weight~year_weight$year)
View(year_weight)
View(BGG_tbl)
options(scipen=999)
pos_scores_times = subset(BGG_tbl, stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 600 & stats.usersrated >9)
options(scipen=999)
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
View(year_weight)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:12)))
boxplot(year_weight$weight~year_weight$year)
dev.off()
View(year_weight)
cut(year_weight$year, breaks=c(1950+10*(0:12)))
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
cut(year_weight$year, breaks=c(1950+10*(0:12)))
options("scipen"=999, "digits"=6)
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
cut(year_weight$year, breaks=c(1950+10*(0:12)))
options("scipen"=999)
cut(year_weight$year, breaks=c(1950+10*(0:12)), dig.lab = 10)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:12)), dig.lab = 10)
boxplot(year_weight$weight~year_weight$year)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:7)), dig.lab = 10)
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 9)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:7)), dig.lab = 10)
boxplot(year_weight$weight~year_weight$year)
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 5)
year_weight$year = cut(year_weight$year, breaks=c(1950+10*(0:7)), dig.lab = 10)
boxplot(year_weight$weight~year_weight$year)
boxplot(year_weight$weight~year_weight$year, names = c(1950+10*(0:7)-5))
boxplot(year_weight$weight~year_weight$year, names = c(1950+10*(0:6)-5))
boxplot(year_weight$weight~year_weight$year, names = c(1950+10*(0:6)+5))
boxplot(year_weight$weight~year_weight$year, names = c(1950+5*(0:13)+5))
year_weight$year = cut(year_weight$year, breaks=c(1950+5*(0:14)), dig.lab = 10)
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 5)
year_weight$year = cut(year_weight$year, breaks=c(1950+5*(0:14)), dig.lab = 10)
boxplot(year_weight$weight~year_weight$year, names = c(1950+5*(0:13)+5))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)+5))
year_weight = subset(year_weight, select=c("year", "stats.numweights"))
year_weight$year = cut(year_weight$year, breaks=c(1950+5*(0:14)), dig.lab = 10)
View(year_weight)
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 5)
year_weight = subset(year_weight, select=c("year", "stats.numweights"))
year_weight$year = cut(year_weight$year, breaks=c(1950+5*(0:14)), dig.lab = 10)
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)+5))
year_weight = subset(BGG_tbl, year > 1950 & stats.numweights > 5)
year_weight = subset(year_weight, select=c("year", "weight"))
year_weight$year = cut(year_weight$year, breaks=c(1950+5*(0:14)), dig.lab = 10)
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)+5))
dev.off()
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)+5))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c("1950+5*(0:13)+5"))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)+5))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13) "-"))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(as.character(1950+5*(0:13))))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(as.character(1950+5*(0:13))+"-"))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c("as.character(1950+5*(0:13))"))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(as.character(1950+5*(0:13))"-"))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(toString(1950+5*(0:13))))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(toString(1950+5*(0:12))))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)))
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(seq(1950+5*(0:13))"-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(seq(1950+5*(0:13))"a")
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(seq(1950+5*(0:13)),"a")
boxplot(year_weight$weight~year_weight$year, las = 2, names = "a",1950+5*(0:13))
years1 = seq(1950+5*(0:13))
years2 = seq(1955+5*(0:13))
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = c(1950+5*(0:13)))
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
years1 = 1950+5*(0:13)
years2 = 1955+5*(0:13)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
years1 = 50+5*(0:13)
years2 = 55+5*(0:13)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
19
19
19
19
years2 = 1955+5*(0:13)
years1 = 1950+5*(0:13)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
years1 = 1951+5*(0:13)
years2 = 55+5*(0:13)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
years2 = 1955+5*(0:13)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
year_weight = subset(BGG_tbl, year > 1960 & stats.numweights > 5)
year_weight = subset(year_weight, select=c("year", "weight"))
year_weight$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
pos_scores_ratings = subset(BGG_tbl, stats.average > 0, stats.usersrated > 0)
num_ratings_buckets = c(2^(0:17)-.5)
num_ratings_hist_data = hist(pos_scores$stats.usersrated, breaks = num_ratings_buckets, plot = FALSE)
num_ratings_hist_data = hist(pos_scores_ratings$stats.usersrated, breaks = num_ratings_buckets, plot = FALSE)
barplot(num_ratings_hist_data$count, col = 'blue', names.arg = c(2^(0:16)))
View(BGG_tbl)
ratings = subset(BGG_tbl, select = c("stats.average", "stats.numratings"))
ratings = subset(BGG_tbl, select = c("stats.average", "stats.usersrated"))
ratings = subset(ratings, stats.usersrated > 9)
hist(ratings)
hist(ratings$stats.average)
hist(ratings$stats.average)
ratings$stats.average = cut(ratings$stats.average, breaks = c(0:10))
hist(ratings$stats.average)
ratings = subset(ratings, stats.usersrated > 9)
ratings = subset(BGG_tbl, select = c("stats.average", "stats.usersrated"))
ratings = subset(ratings, stats.usersrated > 9)
ratings$stats.average = floor(ratings$stats.average)
hist(ratings$stats.average)
hist(ratings$stats.average, xlim = c(0:10))
hist(ratings$stats.average, xlim = c(1:10))
hist(ratings$stats.average, xlim = c(0, 10))
ratings = subset(BGG_tbl, select = c("stats.average", "stats.usersrated"))
ratings = subset(ratings, stats.usersrated > 9)
hist(ratings$stats.average, breaks = c(0:10), xlim = c(0, 10))
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10))
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10), xlab = "Rating", main = "Histogram of ratings")
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10), xlab = "Rating", main = "All ratings")
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10), xlab = "Rating", main = "All ratings", col = "blue")
hist(ratings$stats.average, breaks = c(0.5*0:20), las = 1, xlim = c(0, 10), xlab = "Rating", main = "All ratings", col = "blue")
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10), xlab = "Rating", main = "All ratings", col = "blue")
ggplot(year_weight, aes(x="year", y="weight")) + geom_point() + geom_smooth()
library(jsonlite, tibble, ggplot)
ggplot(year_weight, aes(x="year", y="weight")) + geom_point() + geom_smooth()
library(ggplot2)
ggplot(year_weight, aes(x="year", y="weight")) + geom_point() + geom_smooth()
ggplot(year_weight, aes(x="year", y="weight")) + geom_point() + geom_smooth(method=loess)
year_weight = subset(BGG_tbl, year > 1960 & stats.numweights > 5)
year_weight = subset(year_weight, select=c("year", "weight"))
ggplot(year_weight, aes(x="year", y="weight")) + geom_point() + geom_smooth(method=loess)
ggplot(year_weight, aes(x=year, y = weight)) + geom_point()
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
year_weight = subset(year_weight, select=c("year", "weight"))
year_weight$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges)
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges, col = "blue")
pos_scores_times = subset(BGG_tbl, stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 600 & stats.usersrated >9)
plot((pos_scores_times$maxtime + pos_scores_times$mintime)/2, pos_scores_times$stats.average)
smoothScatter((pos_scores_times$maxtime + pos_scores_times$mintime)/2, pos_scores_times$stats.average, nbin=128, colramp = colorRampPalette(c("white", blues9)))
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10), xlab = "Rating", main = "All ratings", col = "blue")
year_weight = subset(BGG_tbl, year > 1960 & stats.usersrated > 5)
year_ratings = subset(BGG_tbl, year > 1960 & stats.usersrated > 5)
year_ratings = subset(year_weight, select=c("year", "stats.average"))
year_ratings$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_weight$year, las = 2, names = ranges, col = "blue")
year_ratings = subset(BGG_tbl, year > 1960 & stats.usersrated > 5)
year_ratings = subset(year_weight, select=c("year", "stats.average"))
year_ratings$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_weight$year, las = 2, names = ranges, col = "blue")
year_weight = subset(BGG_tbl, year > 1960 & stats.numweights > 5)
year_weight = subset(year_weight, select=c("year", "weight"))
year_weight$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges, col = "blue")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "blue")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "blue", outcol="red")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "blue", outcol="red", outpch = 8)
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "blue", outcol="red", outpch = 16)
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "blue", outcol="red", outpch = .)
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="red", outpch = .)
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="red", outpch = 8)
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="red")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue4")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue1")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings = subset(year_weight, select=c("year", "stats.average"))
year_ratings$year = cut(year_weight$year, breaks=c(2000+2*(0:10)), dig.lab = 10)
years1 = 2001+2*(0:9)
years2 = 2006+2*(0:9)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
years1 = 2001+2*(0:9)
years2 = 2003+2*(0:9)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings = subset(year_weight, select=c("year", "stats.average"))
year_ratings$year = cut(year_weight$year, breaks=c(2000+2*(0:10)), dig.lab = 10)
years1 = 2001+2*(0:9)
years2 = 2003+2*(0:9)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings = subset(BGG_tbl, year > 1960 & stats.usersrated > 5)
year_ratings = subset(year_ratings, select=c("year", "stats.average"))
year_ratings$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings = subset(BGG_tbl, year > 1960 & stats.usersrated > 5)
year_ratings = subset(year_ratings, select=c("year", "stats.average"))
year_ratings$year = cut(year_ratings$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
years1 = 1961+5*(0:11)
years2 = 1965+5*(0:11)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
year_ratings$year = cut(year_ratings2$year, breaks=c(2000+2*(0:10)), dig.lab = 10)
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
year_ratings2$year = cut(year_ratings2$year, breaks=c(2000+2*(0:10)), dig.lab = 10)
years1 = 2001+2*(0:9)
years2 = 2003+2*(0:9)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings2$stats.average~year_ratings2$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
year_ratings2$year = cut(year_ratings2$year, breaks=c(2000+2*(0:9)), dig.lab = 10)
years1 = 2001+2*(0:8)
years2 = 2003+2*(0:8)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings2$stats.average~year_ratings2$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
cut(year_ratings2$year, breaks=c(2000+2*(0:9)), dig.lab = 10)
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
cut(year_ratings2$year, breaks=c(2000+2*(0:9)), dig.lab = 10)
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
year_ratings2$year = cut(year_ratings2$year, breaks=c(1999+2*(0:9)), dig.lab = 10)
years1 = 2000+2*(0:8)
years2 = 2002+2*(0:8)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings2$stats.average~year_ratings2$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
boxplot(year_weight$weight~year_weight$year, las = 2, names = ranges, col = "blue")
year_weight = subset(BGG_tbl, year > 1960 & stats.numweights > 5)
year_weight = subset(year_weight, select=c("year", "weight"))
year_weight$year = cut(year_weight$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
year_weight_range1 = 1961+5*(0:11)
year_weight_range2 = 1965+5*(0:11)
year_weight_ranges = paste(year_weight_range1, year_weight_range2, sep="-")
boxplot(year_weight$weight~year_weight$year, las = 2, names = year_weight_ranges, col = "blue")
year_ratings = subset(BGG_tbl, year > 1960 & stats.usersrated > 5)
year_ratings = subset(year_ratings, select=c("year", "stats.average"))
year_ratings$year = cut(year_ratings$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
year_ratings_range1 = 1961+5*(0:11)
year_ratings_range2 = 1965+5*(0:11)
year_ratings_ranges = paste(year_ratings_range1, year_ratings_range2, sep="-")
boxplot(year_ratings$stats.average~year_ratings$year, las = 2, names = year_ratings_ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
pos_scores_times = subset(BGG_tbl, stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 600 & stats.usersrated >9)
plot((pos_scores_times$maxtime + pos_scores_times$mintime)/2, pos_scores_times$stats.average)
smoothScatter((pos_scores_times$maxtime + pos_scores_times$mintime)/2, pos_scores_times$stats.average, nbin=128, colramp = colorRampPalette(c("white", blues9)))
pos_scores_ratings = subset(BGG_tbl, stats.average > 0, stats.usersrated > 0)
num_ratings_buckets = c(2^(0:17)-.5)
num_ratings_hist_data = hist(pos_scores_ratings$stats.usersrated, breaks = num_ratings_buckets, plot = FALSE)
barplot(num_ratings_hist_data$count, col = 'blue', names.arg = c(2^(0:16)))
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
year_ratings2$year = cut(year_ratings2$year, breaks=c(1999+2*(0:9)), dig.lab = 10)
years1 = 2000+2*(0:8)
years2 = 2002+2*(0:8)
ranges = paste(years1, years2, sep="-")
boxplot(year_ratings2$stats.average~year_ratings2$year, las = 2, names = ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_ratings2 = subset(BGG_tbl, year > 2000 & stats.usersrated > 5)
year_ratings2 = subset(year_ratings2, select=c("year", "stats.average"))
year_ratings2$year = cut(year_ratings2$year, breaks=c(1999+2*(0:9)), dig.lab = 10)
year_ratings2_range1 = 2000+2*(0:8)
year_ratings2_range2 = 2002+2*(0:8)
year_ratings2_ranges = paste(year_ratings2_range1, year_ratings2_range2, sep="-")
boxplot(year_ratings2$stats.average~year_ratings2$year, las = 2, names = year_ratings2_ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
ratings = subset(BGG_tbl, select = c("stats.average", "stats.usersrated"))
ratings = subset(ratings, stats.usersrated > 9)
hist(ratings$stats.average, breaks = c(0.5*0:20), xlim = c(0, 10), xlab = "Rating", main = "All ratings", col = "blue")
pos_scores_times = subset(BGG_tbl, stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 600 & stats.usersrated >9)
plot((pos_scores_times$maxtime + pos_scores_times$mintime)/2, pos_scores_times$stats.average)
smoothScatter((pos_scores_times$maxtime + pos_scores_times$mintime)/2, pos_scores_times$stats.average, nbin=128, colramp = colorRampPalette(c("white", blues9)))
year_playtime = subset(year_playtime, select = c("year", "mintime", "maxtime"))
year_playtime = subset(BGG_tbl, year > 1960 & stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 600 & stats.usersrated >9)
year_playtime = subset(year_playtime, select = c("year", "mintime", "maxtime"))
year_playtime$year = cut(year_playtime$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
year_playtime = subset(BGG_tbl, year > 1960 & stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 600 & stats.usersrated >9)
year_playtime = subset(year_playtime, select = c("year", "mintime", "maxtime"))
year_playtime$year = cut(year_playtime$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
boxplot(year_playtime$stats.average~year_playtime$year, las = 2, names = year_ratings_ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
boxplot((year_playtime$mintime+year_playtime$maxtime)/2~year_playtime$year, las = 2, names = year_ratings_ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
year_playtime = subset(BGG_tbl, year > 1960 & stats.average > 0 & mintime > 0 & maxtime > 0 & maxtime < 301 & stats.usersrated >9)
year_playtime = subset(year_playtime, select = c("year", "mintime", "maxtime"))
year_playtime$year = cut(year_playtime$year, breaks=c(1960+5*(0:12)), dig.lab = 10)
boxplot((year_playtime$mintime+year_playtime$maxtime)/2~year_playtime$year, las = 2, names = year_ratings_ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
View(BGG_tbl)
corrs = subset(BGG_tbl, select = c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned"))
corr_vars = subset(BGG_tbl, select = c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned"))
corr_vars = subset(BGG_tbl, select = c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned"))
cor(corr_vars, method = "pearson", use = "complete.obs")
corr_vars = BGG_tbl[,c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned")]
cor(corr_vars, method = "pearson", use = "complete.obs")
BGG_tbl$stats.avgweight = as.numeric(as.character(BGG_tbl$stats.avgweight))
BGG_tbl$stats.views = as.numeric(as.character(BGG_tbl$stats.views))
BGG_tbl$stats.numprevowned = as.numeric(as.character(BGG_tbl$stats.numprevowned))
corr_vars = BGG_tbl[,c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned")]
cor(corr_vars, method = "pearson", use = "complete.obs")
View(corr_vars)
BGG_tbl$weight = as.numeric(as.character(BGG_tbl$weight))
corr_vars = BGG_tbl[,c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned")]
cor(corr_vars, method = "pearson", use = "complete.obs")
source('~/GitHub/BGGAnalysis/import_and_cleanup.R', echo=TRUE)
BGG_flat = flatten(BGG)
BGG_flat = subset(BGG_flat, select = -c(stats.numtrading, stats.stddev, stats.numfans, stats.numwantparts, stats.numwish, stats.numhasparts))
BGG_tbl = as.data.frame(BGG_flat)
BGG_tbl$id = as.numeric(as.character(BGG_tbl$id))
BGG_tbl$year = as.numeric(as.character(BGG_tbl$year))
BGG_tbl$weight = as.numeric(as.character(BGG_tbl$weight))
BGG_tbl$mintime = as.numeric(as.character(BGG_tbl$mintime))
dev.off()
BGG = stream_in(file("pruned2.json"))
BGG_flat = flatten(BGG)
BGG_flat = subset(BGG_flat, select = -c(stats.numtrading, stats.stddev, stats.numfans, stats.numwantparts, stats.numwish, stats.numhasparts))
BGG_tbl = as.data.frame(BGG_flat)
BGG_tbl$id = as.numeric(as.character(BGG_tbl$id))
BGG_tbl$year = as.numeric(as.character(BGG_tbl$year))
BGG_tbl$weight = as.numeric(as.character(BGG_tbl$weight))
BGG_tbl$mintime = as.numeric(as.character(BGG_tbl$mintime))
BGG_tbl$maxtime = as.numeric(as.character(BGG_tbl$maxtime))
BGG_tbl$age = as.numeric(as.character(BGG_tbl$age))
BGG_tbl$mintplayers = as.numeric(as.character(BGG_tbl$minplayers))
BGG_tbl$maxplayers = as.numeric(as.character(BGG_tbl$maxplayers))
BGG_tbl$usrage = as.numeric(as.character(BGG_tbl$usrage))
BGG_tbl$stats.average = as.numeric(as.character(BGG_tbl$stats.average))
BGG_tbl$stats.numowned = as.numeric(as.character(BGG_tbl$stats.numowned))
BGG_tbl$stats.numcomments = as.numeric(as.character(BGG_tbl$stats.numcomments))
BGG_tbl$stats.usersrated = as.numeric(as.character(BGG_tbl$stats.usersrated))
BGG_tbl$stats.avgweight = as.numeric(as.character(BGG_tbl$stats.avgweight))
BGG_tbl$stats.views = as.numeric(as.character(BGG_tbl$stats.views))
BGG_tbl$stats.numprevowned = as.numeric(as.character(BGG_tbl$stats.numprevowned))
corr_vars = BGG_tbl[,c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned")]
cor(corr_vars, method = "pearson", use = "complete.obs")
head(corr_vars)
typeof(corr_vars)
cor(corr_vars, method = "pearson", use = "pairwise.complete.obs")
cor(corr_vars, method = "pearson", use = "complete.obs")
typeof(corr_vars$year)
typeof(corr_vars$mintime)
typeof(corr_vars$maxtime)
typeof(corr_vars$maxplayers)
typeof(corr_vars$age)
typeof(corr_vars$weight)
typeof(corr_vars$minplayers)
BGG_tbl$mintplayers = as.numeric(as.character(BGG_tbl$minplayers))
corr_vars = BGG_tbl[,c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned")]
cor(corr_vars, method = "pearson", use = "complete.obs")
typeof(corr_vars$minplayers)
View(BGG_tbl)
BGG_flat = flatten(BGG)
BGG_flat = subset(BGG_flat, select = -c(stats.numtrading, stats.stddev, stats.numfans, stats.numwantparts, stats.numwish, stats.numhasparts))
BGG_tbl$id = as.numeric(as.character(BGG_tbl$id))
BGG_tbl$year = as.numeric(as.character(BGG_tbl$year))
BGG_tbl$weight = as.numeric(as.character(BGG_tbl$weight))
BGG_tbl$mintime = as.numeric(as.character(BGG_tbl$mintime))
BGG_tbl$age = as.numeric(as.character(BGG_tbl$age))
BGG_tbl$maxtime = as.numeric(as.character(BGG_tbl$maxtime))
BGG_tbl$minplayers = as.numeric(as.character(BGG_tbl$minplayers))
BGG_tbl$maxplayers = as.numeric(as.character(BGG_tbl$maxplayers))
BGG_tbl$usrage = as.numeric(as.character(BGG_tbl$usrage))
BGG_tbl$stats.average = as.numeric(as.character(BGG_tbl$stats.average))
BGG_tbl$stats.numowned = as.numeric(as.character(BGG_tbl$stats.numowned))
BGG_tbl$stats.numcomments = as.numeric(as.character(BGG_tbl$stats.numcomments))
BGG_tbl$stats.usersrated = as.numeric(as.character(BGG_tbl$stats.usersrated))
BGG_tbl$stats.avgweight = as.numeric(as.character(BGG_tbl$stats.avgweight))
BGG_tbl$stats.views = as.numeric(as.character(BGG_tbl$stats.views))
BGG_tbl$stats.numprevowned = as.numeric(as.character(BGG_tbl$stats.numprevowned))
corr_vars = BGG_tbl[,c("year", "mintime", "maxtime", "age", "minplayers", "maxplayers", "weight", "stats.average", "stats.numowned", "stats.views", "stats.numprevowned")]
cor(corr_vars, method = "pearson", use = "complete.obs")
cor(corr_vars, method = "pearson", use = "complete.obs")
corr_mat = round(cor(corr_vars, method = "pearson", use = "complete.obs"), 2)
corr_mat
install.packages("corrplot")
library(corrplot)
corrplot(corr_mat, method = "circle")
View(BGG_tbl)
designers_ratings = subset(BGG_tbl, select = c("designers", "stats.average"))
designers_ratings = subset(BGG_tbl, stats.usersrated > 5)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
library(dplyr)
designers_ratings %>% mutate(designers=strsplit(as.character(designers), ",")) %>% unnest(designers)
View(designers_ratings)
designers_ratings = subset(BGG_tbl, stats.usersrated > 5)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
unnest(designers_ratings, designers)
View(BGG_tbl)
designers_ratings = unnest(designers_ratings, designers)
View(designers_ratings)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
head(designers_ratings[order(ratings)])
head(designers_ratings[order(stats.average)])
head(designers_ratings[order(designers_ratings$stats.average)])
head(designers_ratings[order(designers_ratings$stats.average),])
head(designers_ratings[order(-designers_ratings$stats.average),])
designers_ratings = nest(designers_ratings, stats.average)
View(designers_ratings)
designers_ratings[0]
head(designers_ratings)
head(c(designers_ratings$designers, mean(designers_ratings$data)))
typeof(designers_ratings$data)
designers_ratings = subset(BGG_tbl, stats.usersrated > 5)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
designers_ratings = unnest(designers_ratings, designers)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
boxplot(designers_ratings$stats.average~designers_ratings$designers, las = 2, names = year_ratings_ranges, col = "cadetblue3", outcol="cadetblue3", outpch=20)
boxplot(designers_ratings$stats.average~designers_ratings$designers, las = 2, col = "cadetblue3", outcol="cadetblue3", outpch=20)
head(designers_ratings[order(-designers_ratings$stats.average),])
designers_ratings = subset(BGG_tbl, stats.usersrated > 10)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
designers_ratings = unnest(designers_ratings, designers)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
designers_ratings = subset(designers_ratings, count(designers_ratings, c(designers_ratings$designers)) > 3)
designers_ratings = subset(BGG_tbl, stats.usersrated > 10)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
designers_ratings = unnest(designers_ratings, designers)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
head(designers_ratings[order(-designers_ratings$stats.average),])
counts = count(designers_ratings, "designers")
View(counts)
count(designers_ratings, "designers")
View(designers_ratings)
count(designers_ratings, designers)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
counts = count(designers_ratings, designers)
designers_ratings = subset(designers_ratings, counts[designers_ratings$designers] > 3)
designers_ratings = subset(designers_ratings, counts$designers = designers_ratings$designers & counts$n > 3)
designers_ratings = subset(designers_ratings, identical(counts$designers, designers_ratings$designers) & counts$n > 3)
counts = count(designers_ratings, designers)
counts
head(counts)
designers_ratings = subset(BGG_tbl, stats.usersrated > 10)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
designers_ratings = unnest(designers_ratings, designers)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
counts = count(designers_ratings, designers)
head(counts)
designers_ratings = subset(designers_ratings, identical(counts$designers, designers_ratings$designers) & counts$n > 3)
designers_ratings = subset(BGG_tbl, stats.usersrated > 10)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
designers_ratings = unnest(designers_ratings, designers)
counts = count(designers_ratings, designers)
typeof(designers_ratings)
designers_ratings = nest(designers_ratings, stats.average)
head(designers_ratings)
designers_ratings = subset(BGG_tbl, stats.usersrated > 100)
designers_ratings = subset(designers_ratings, select = c("designers", "stats.average"))
designers_ratings = unnest(designers_ratings, designers)
designers_ratings = subset(designers_ratings, !identical(designers_ratings$designers, "(Uncredited)"))
head(designers_ratings[order(-designers_ratings$stats.average),])
save.image("~/GitHub/BGGAnalysis/workspace.RData")
